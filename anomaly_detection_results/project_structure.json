{
  "project_name": "Anomaly Detection Suite",
  "creation_date": "2025-07-15T17:11:08.700607",
  "total_files": 31,
  "files_created": [
    "autoencoder_config.json",
    "autoencoder_model.pth",
    "autoencoder_predictions.npy",
    "autoencoder_results.json",
    "autoencoder_scaler.pkl",
    "autoencoder_scores.npy",
    "autoencoder_training.json",
    "data_split_info.json",
    "data_visualization.png",
    "dataset_X.npy",
    "dataset_info.json",
    "dataset_y.npy",
    "final_summary.json",
    "isolation_forest_model.pkl",
    "isolation_forest_predictions.npy",
    "isolation_forest_results.json",
    "isolation_forest_scores.npy",
    "lof_predictions.npy",
    "lof_results.json",
    "lof_scores.npy",
    "methods_comparison.png",
    "one_class_svm_model.pkl",
    "one_class_svm_predictions.npy",
    "one_class_svm_results.json",
    "one_class_svm_scores.npy",
    "statistical_predictions.npy",
    "statistical_results.json",
    "statistical_scaler.pkl",
    "statistical_scores.npy",
    "svm_scaler.pkl",
    "training_progress.png"
  ],
  "file_descriptions": {
    "dataset_X.npy": "Feature matrix of the synthetic dataset",
    "dataset_y.npy": "Labels for the synthetic dataset",
    "dataset_info.json": "Dataset metadata and statistics",
    "data_visualization.png": "Visualization of the dataset distribution",
    "statistical_*.npy": "Statistical method predictions and scores",
    "statistical_results.json": "Statistical method results and metadata",
    "isolation_forest_model.pkl": "Trained Isolation Forest model",
    "isolation_forest_*.npy": "Isolation Forest predictions and scores",
    "isolation_forest_results.json": "Isolation Forest results and metadata",
    "one_class_svm_model.pkl": "Trained One-Class SVM model",
    "svm_scaler.pkl": "Scaler used for SVM preprocessing",
    "one_class_svm_*.npy": "SVM predictions and scores",
    "one_class_svm_results.json": "SVM results and metadata",
    "lof_*.npy": "LOF predictions and scores",
    "lof_results.json": "LOF results and metadata",
    "autoencoder_model.pth": "Trained autoencoder model with full state",
    "autoencoder_scaler.pkl": "Scaler used for autoencoder preprocessing",
    "autoencoder_config.json": "Autoencoder architecture configuration",
    "autoencoder_training.json": "Training history and hyperparameters",
    "autoencoder_*.npy": "Autoencoder predictions and scores",
    "autoencoder_results.json": "Autoencoder results and metadata",
    "methods_comparison.png": "Visual comparison of all methods",
    "training_progress.png": "Autoencoder training loss progression",
    "final_summary.json": "Comprehensive results summary",
    "project_structure.json": "This file - project structure information"
  }
}